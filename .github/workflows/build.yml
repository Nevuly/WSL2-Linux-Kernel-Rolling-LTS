name: LTS Kernel CI

on:
  push:
    tags:
      - 'linux-wsl-lts-6.6.[0-9]+'

run-name: LTS Release Build ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: nevuly/nevuly-dev-base:arch
    strategy:
      matrix:
        include:
          - arch: x86
            image-name: bzImage-x86_64
          - arch: arm64
            image-name: Image-arm64
    env:
      TAG_VERSION: '${{ github.ref_name }}'

    steps:
      - name: Trust this directory
        run: git config --global --add safe.directory /__w/WSL2-Linux-Kernel-Rolling-LTS/WSL2-Linux-Kernel-Rolling-LTS

      - uses: actions/checkout@main

      - name: Download Kernel
        shell: bash
        run: |
          git clone https://github.com/Nevuly/WSL2-Linux-Kernel-Rolling-LTS.git --depth 1 -b $TAG_VERSION linux

      - name: Build Kernel
        run: |
          cd linux
          if [ ${{ matrix.arch }} == "x86" ]
          then
          echo "Build X86 Kernel"
          make KCONFIG_CONFIG=arch/x86/configs/config-wsl-x86 -j$(echo `nproc` + 1 | bc)
          cp arch/x86/boot/bzImage ../${{ matrix.image-name }}
          else
          echo "Build ARM64 Kernel"
          export ARCH=arm64 && export CROSS_COMPILE=aarch64-linux-gnu-
          make KCONFIG_CONFIG=arch/arm64/configs/config-wsl-arm64 -j$(echo `nproc` + 1 | bc)
          cp arch/arm64/boot/Image ../${{ matrix.image-name }}
          fi
          cd .. && sha256sum ${{ matrix.image-name }} > ${{ matrix.image-name }}.sha256

      - name: Upload Kernel Images
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.image-name }}
          path: |
            ${{ matrix.image-name }}
            ${{ matrix.image-name }}.sha256

  release:
    runs-on: ubuntu-latest
    needs: build
    env:
      TAG_VERSION: '${{ github.ref_name }}'

    steps:
      - uses: actions/checkout@main
      - uses: actions/download-artifact@v3
        with:
          path: release_images/

      - name: Release Kernel
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TAG_VERSION }}
          tag_name: ${{ env.TAG_VERSION }}
          body: |
            **NOTICE**
            ARM64 kernel has not been tested. If you have any issues, please leave an issue on the Issues tab!

            **How to apply this kernel?**
            Before you try to apply this kernel, You **MUST** shutdown your WSL. (wsl --shutdown)
            Check this [document](https://learn.microsoft.com/en-us/windows/wsl/wsl-config).

            **This kernel built on ArchLinux.**

          files: |
            release_images/*/*
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          fail_on_unmatched_files: true
